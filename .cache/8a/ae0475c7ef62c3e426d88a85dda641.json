{"id":"index.html","dependencies":[{"name":"./js/three.min.js","dynamic":true,"resolved":"/home/spyre/GitHub/HackGTF23/memoryscape.github.io/js/three.min.js","parent":"/home/spyre/GitHub/HackGTF23/memoryscape.github.io/index.html"},{"name":"./js/panolens.min.js","dynamic":true,"resolved":"/home/spyre/GitHub/HackGTF23/memoryscape.github.io/js/panolens.min.js","parent":"/home/spyre/GitHub/HackGTF23/memoryscape.github.io/index.html"},{"name":"./index.js","dynamic":true,"resolved":"/home/spyre/GitHub/HackGTF23/memoryscape.github.io/index.js","parent":"/home/spyre/GitHub/HackGTF23/memoryscape.github.io/index.html"},{"name":"/home/spyre/GitHub/HackGTF23/memoryscape.github.io/package.json","includedInParent":true,"mtime":1697319568853}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>HTML 5 Boilerplate</title>\n  <!-- <link rel=\"stylesheet\" href=\"style.css\"> -->\n</head>\n\n<body>\n  <h1>Teest</h1>\n  <div class=\"x1\"></div>\n  <div class=\"x2\"></div>\n  <div class=\"x3\"></div>\n  <button onclick=\"askPermission()\">This is a button</button>\n  <script src=\"/21d17794c343e9d69280d5fff31d536c.js\"></script>\n  <script src=\"/0f196356c1ed0cdef6ba43c7ca714784.js\"></script>\n  <script>// test\nfunction handleOrientation(event) {\n  var alpha = event.alpha;\n  var beta = event.beta;\n  var gamma = event.gamma;\n  // Do stuff...\n  console.log(\"Coods:\" + alpha + \" \" + beta + \" \" + gamma);\n  // Set the innerHTML of the element with the ids x1, x2, x3 to the values of alpha, beta and gamma\n  document.querySelector(\".x1\").innerHTML = alpha;\n  document.querySelector(\".x2\").innerHTML = beta;\n  document.querySelector(\".x3\").innerHTML = gamma;\n}\nfunction askPermission() {\n  alert(\"Running two\");\n  console.log(\"testing\");\n  // feature detect\n  if (typeof DeviceOrientationEvent.requestPermission === \"function\") {\n    DeviceOrientationEvent.requestPermission().then(function (permissionState) {\n      if (permissionState === \"granted\") {\n        alert(\"Success\");\n        console.log(\"afd\");\n        window.addEventListener(\"deviceorientation\", handleOrientation);\n      } else {\n        // Handle errors here, but don't reject the Promise.\n        console.log(\"Permission denied\");\n      }\n    }).catch(function (error) {\n      // This won't be triggered if no Promise rejection occurs in the above block.\n      console.log(\"Error occurred:\", error);\n    });\n  } else {\n    console.log(\"something else\");\n    // handle regular non iOS 13+ devices\n  }\n}\n// window.addEventListener('deviceorientation', handleOrientation);</script>\n  <div class=\"app\"></div>\n  <script src=\"/168726dbe96b3ce427e7fedce31bb0bc.js\"></script>\n</body>\n\n</html>"},"sourceMaps":null,"error":null,"hash":"d2816dd8e6d2c2a91ff8e7ae4ec77545","cacheData":{"env":{}}}